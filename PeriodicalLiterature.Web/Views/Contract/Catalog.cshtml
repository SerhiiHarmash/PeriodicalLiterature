@using PeriodicalLiterature.Models.Enums
@model PeriodicalLiterature.Web.Models.ViewModels.Contract.CatalogViewModel

@{
    ViewBag.Title = "Catalog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="catalog">
    <div class="filtration">
        @using (Html.BeginForm("GetContractsForFollowing", "Contract", FormMethod.Get))
        {
        <div class="filtration-control">
            <p class="title">Filtration</p>

            <div>
                @Html.LabelFor(model => model.ContractFilterCriteria.EditionName, htmlAttributes: new { @class = "filtration-label" })
                @Html.EditorFor(model => model.ContractFilterCriteria.EditionName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractFilterCriteria.EditionName, "", new { @class = "text-danger" })
            </div>

            <br />
            @Html.LabelFor(model => model.ContractFilterCriteria.Genres, htmlAttributes: new { @class = "filtration-label" })
            @Html.ListBoxFor(model => model.ContractFilterCriteria.Genres, new MultiSelectList(Model.Genres), new { @class = "chosen-select form-control" })
            <br />
            <br />
            @Html.LabelFor(model => model.ContractFilterCriteria.Publishers, htmlAttributes: new { @class = "filtration-label" })
            @Html.ListBoxFor(model => model.ContractFilterCriteria.Publishers, new MultiSelectList(Model.Publishers), new { @class = "chosen-select form-control " })
            <br />
            <br />
            @Html.LabelFor(model => model.ContractFilterCriteria.Periodicities, htmlAttributes: new { @class = "filtration-label" })
            @Html.ListBoxFor(model => model.ContractFilterCriteria.Periodicities, Model.Periodicities, new { @class = "chosen-select form-control " })
            <br />
            <br />
            @Html.LabelFor(model => model.ContractFilterCriteria.SortCriterion, htmlAttributes: new { @class = "filtration-label" })
            <div class="filtration-checkbox">

                <label>
                    @Html.RadioButtonFor(model => model.ContractFilterCriteria.SortCriterion, SortCriteria.Rating, new { @checked = "checked", @class = "form-check-input" })
                    rating
                </label>
                <br />
                <label>
                    @Html.RadioButtonFor(model => model.ContractFilterCriteria.SortCriterion, SortCriteria.Subscribed, new { @class = "form-check-input" })
                    subscription count
                </label>
                <br />
                <label>
                    @Html.RadioButtonFor(model => model.ContractFilterCriteria.SortCriterion, SortCriteria.Commented, new { @class = "form-check-input" })
                    most commented
                </label>
                <br />
                <label>
                    @Html.RadioButtonFor(model => model.ContractFilterCriteria.SortCriterion, SortCriteria.New, new { @class = "form-check-input" })
                    new
                </label>
                <br />
            </div>

            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Apply" class="btn btn-default" />
                </div>
            </div>
        </div>
        }
    </div>

    <div class="showcase">
        <h2>Catalog</h2>
        @foreach (var contract in Model.ContractsShowcase)
        {
            <div class="contract-block">
                <a href="/Contract/GetContractForFollowing?contractId=@contract.Id">
                    <img src="~/Storage/@contract.CoverName" alt="Cover" />
                    <p class="contract-name">@contract.EditionTitle</p>
                    <p class="contract-periodicity">@contract.Periodicity</p>
                </a>
            </div>
        }
    </div>
</div>



@section scripts
{
    <script>
        $(".chosen-select").chosen({ allow_single_deselect: true });
    </script>
}
